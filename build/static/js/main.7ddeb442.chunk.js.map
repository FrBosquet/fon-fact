{"version":3,"sources":["funfact-generator.js","firebase.js","App.js","index.js"],"names":["pick","arr","Math","floor","random","length","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","App","useState","collection","setCollection","funFact","setFunFact","useEffect","unsub","cb","col","onSnapshot","snaps","data","forEach","s","id","subscribe","className","alt","src","disabled","Boolean","onClick","when","moments","action","actions","who","people","where","places","consecuence","consecuences","funFactGenerator","version","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wgMAAMA,EAAO,SAACC,GAGZ,OAAOA,EAFOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,U,oDCyBzCC,G,8BAAMC,YAVW,CACrBC,OAAQ,0CACRC,WAAY,gCACZC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,kBAMXC,GAFYC,YAAaV,GAEpBW,e,QCvBI,SAASC,IACtB,MAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEAC,qBAAU,WACR,IAAMC,EDkCe,SAACC,GACxB,IAAMC,EAAMP,YAAWL,EAAI,UAY3B,OAVca,YAAWD,GAAK,SAACE,GAC7B,IAAMC,EAAO,GAEbD,EAAME,SAAQ,SAACC,GACbF,EAAKE,EAAEC,IAAMD,EAAEF,OAAOA,QAGxBJ,EAAGI,MC5CWI,EAAU,SAACJ,GACvBT,EAAcS,MAGhB,OAAO,kBAAML,OACZ,IAMH,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAKC,IAAI,WAAWC,IAAI,aACxB,yEACA,wBAAQC,UAAWC,QAAQnB,GAAaoB,QAR3B,WACfjB,EFb4B,SAACH,GAC/B,IAAMqB,EAAOzC,EAAKoB,EAAWsB,SACvBC,EAAS3C,EAAKoB,EAAWwB,SACzBC,EAAM7C,EAAKoB,EAAW0B,QACtBC,EAAQ/C,EAAKoB,EAAW4B,QACxBC,EAAcjD,EAAKoB,EAAW8B,cAEpC,MAAM,GAAN,OAAUT,EAAV,YAAkBE,EAAlB,YAA4BE,EAA5B,YAAmCE,GAAnC,OAA2CE,GEM9BE,CAAiB/B,KAO1B,sBAGCE,GAAW,mBAAGa,UAAU,WAAb,SAAyBb,IACrC,oBAAGa,UAAU,UAAb,qBAAgCiB,UCzBtC,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACvC,EAAD,MAEFmC,K","file":"static/js/main.7ddeb442.chunk.js","sourcesContent":["const pick = (arr) => {\n  const index = Math.floor(Math.random() * arr.length);\n\n  return arr[index];\n};\n\nexport const funFactGenerator = (collection) => {\n  const when = pick(collection.moments);\n  const action = pick(collection.actions);\n  const who = pick(collection.people);\n  const where = pick(collection.places);\n  const consecuence = pick(collection.consecuences);\n\n  return `${when} ${action} ${who} ${where}${consecuence}`;\n};\n","import { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport {\n  getFirestore,\n  collection,\n  addDoc,\n  doc,\n  setDoc,\n  onSnapshot\n} from \"firebase/firestore\";\nimport people from \"./content/people.json\";\nimport places from \"./content/places.json\";\nimport actions from \"./content/actions.json\";\nimport moments from \"./content/moments.json\";\nimport consecuences from \"./content/consecuences.json\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDbQjt6FNL5jJPncDjXdk6rB9dfEMafyjg\",\n  authDomain: \"fonfact-d67a0.firebaseapp.com\",\n  projectId: \"fonfact-d67a0\",\n  storageBucket: \"fonfact-d67a0.appspot.com\",\n  messagingSenderId: \"713556115710\",\n  appId: \"1:713556115710:web:a1b890c824dbdb994de5af\",\n  measurementId: \"G-CB8K04GGGZ\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nconst db = getFirestore();\n\nexport const seed = async () => {\n  try {\n    await setDoc(doc(db, \"frases\", \"people\"), { data: people });\n    await setDoc(doc(db, \"frases\", \"places\"), { data: places });\n    await setDoc(doc(db, \"frases\", \"actions\"), { data: actions });\n    await setDoc(doc(db, \"frases\", \"moments\"), { data: moments });\n    await setDoc(doc(db, \"frases\", \"consecuences\"), { data: consecuences });\n\n    console.log(\"Done with seeding\");\n  } catch (e) {\n    console.error(\"Error adding document: \", e);\n  }\n};\n\nexport const subscribe = (cb) => {\n  const col = collection(db, \"frases\");\n\n  const unsub = onSnapshot(col, (snaps) => {\n    const data = {};\n\n    snaps.forEach((s) => {\n      data[s.id] = s.data().data;\n    });\n\n    cb(data);\n  });\n\n  return unsub;\n};\n","import { useEffect, useState } from \"react\";\nimport { funFactGenerator } from \"./funfact-generator\";\nimport \"./styles.css\";\nimport { version } from \"../package.json\";\nimport { subscribe } from \"./firebase\";\n\nexport default function App() {\n  const [collection, setCollection] = useState(null);\n  const [funFact, setFunFact] = useState(null);\n\n  useEffect(() => {\n    const unsub = subscribe((data) => {\n      setCollection(data);\n    });\n\n    return () => unsub();\n  }, []);\n\n  const generate = () => {\n    setFunFact(funFactGenerator(collection));\n  };\n\n  return (\n    <div className=\"App\">\n      <img alt=\"logotipo\" src=\"logo.png\" />\n      <h3>Dale al boton pa ver barbaridades namas</h3>\n      <button disabled={!Boolean(collection)} onClick={generate}>\n        EL BOTON\n      </button>\n      {funFact && <p className=\"fun-fact\">{funFact}</p>}\n      <p className=\"version\">version {version}</p>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}